{"version":3,"sources":["Components/SearchRestaurants.js","Components/AllRestaurants.js","Components/Pagination.js","Components/App.js","reportWebVitals.js","index.js"],"names":["Search","styled","div","Filter","SearchRestaurants","byState","this","props","console","log","byGenre","byAttire","className","style","backgroundColor","id","type","aria-label","onKeyDown","e","searchRestaurants","target","value","keyCode","data-toggle","aria-haspopup","aria-expanded","states","map","s","index","onClick","filterByState","href","color","genres","g","i","filterByGenre","attire","filterByAttire","Component","Table","table","AllRestaurants","isEmpty","restaurants","length","data","columns","cellPadding","cellSpacing","font-family","heading","item","event","window","location","website","column","toLowerCase","Nav","nav","Ul","ul","Pagination","pageNumbers","Math","ceil","totalItems","itemsPerPage","push","number","currentPage","setCurrentPage","App","state","items","isLoaded","orderBy","orderDir","queryText","bind","setState","guery","fetch","headers","Authorization","then","res","json","result","uniqueAndSortedStates","Set","sort","unshift","genre","split","flat","uniqueAndSortedGenres","uniqueAndSortedAttire","catch","err","order","sortedItems","a","b","filter","eachItem","includes","sortedFilteredItems","indexOfLastItem","indexOfFirstItem","currentItems","slice","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8bAIA,IAAMA,EAASC,IAAOC,IAAV,KAKNC,EAASF,IAAOC,IAAV,KA+HGE,E,uKAxHD,IAAD,OACDC,EAAUC,KAAKC,MAAMF,QACzBG,QAAQC,IAAIJ,GACZ,IAAIK,EAAUJ,KAAKC,MAAMG,QACzBF,QAAQC,IAAIC,GACZ,IAAIC,EAAWL,KAAKC,MAAMI,SAI1B,OAHAH,QAAQC,IAAIE,GAKR,cAACX,EAAD,CAAQY,UAAU,yDAAyDC,MAAO,CAACC,gBAAiB,WAApG,SAEI,qBAAKF,UAAU,YAAf,SAEI,sBAAKA,UAAU,cAAf,UACI,uBACIG,GAAG,oBACHC,KAAK,OACLJ,UAAU,eACVK,aAAW,qBACXC,UAAW,SAAAC,GAAC,OAAI,EAAKZ,MAAMa,kBAAkBD,EAAEE,OAAOC,MAAOH,EAAEI,YAGnE,sBAAKX,UAAU,qBAAf,UAEI,eAACT,EAAD,CAAQS,UAAU,kBAAlB,UAEI,yBACIA,UAAU,sBACVI,KAAK,SACLQ,cAAY,WACZC,gBAAc,OACdC,gBAAc,QALlB,oCAO4BrB,EAP5B,IAOqC,sBAAMO,UAAU,aAIrD,qBAAKA,UAAU,8CAAf,SAEKN,KAAKC,MAAMoB,OAAOC,KAAI,SAACC,EAAGC,GAAJ,OACnB,wBAEIlB,UAAW,0BAA4B,EAAKL,MAAMF,UAAYwB,EAAI,SAAW,IAC7EE,QAAS,kBAAM,EAAKxB,MAAMyB,cAAcH,IACxCI,KAAK,IAJT,SAKKJ,GAJIC,WAYrB,eAAC3B,EAAD,CAAQS,UAAU,kBAAlB,UAEI,yBACIC,MAAO,CAACC,gBAAgB,UAAWoB,MAAO,SAC1ClB,KAAK,SACLJ,UAAU,sBACVY,cAAY,WACZC,gBAAc,OACdC,gBAAc,QANlB,8BAQsBpB,KAAKC,MAAMG,QARjC,IAQ0C,sBAAME,UAAU,aAG1D,qBAAKA,UAAU,8CAAf,SACKN,KAAKC,MAAM4B,OAAOP,KAAI,SAACQ,EAAGC,GAAJ,OACnB,wBAEIzB,UAAW,0BAA4B,EAAKL,MAAMG,UAAY0B,EAAI,SAAW,IAC7EL,QAAS,kBAAM,EAAKxB,MAAM+B,cAAcF,IACxCH,KAAK,IAJT,SAKKG,GAJIC,WAWrB,eAAClC,EAAD,CAAQS,UAAU,mBAAlB,UAEI,yBACIC,MAAO,CAACC,gBAAgB,UAAWoB,MAAO,SAC1CtB,UAAU,uBACVI,KAAK,SACLQ,cAAY,WACZC,gBAAc,OACdC,gBAAc,QANlB,gCAQwBf,EARxB,IAQkC,sBAAMC,UAAU,aAIlD,qBAAKA,UAAU,8CAAf,SAEKN,KAAKC,MAAMgC,OAAOX,KAAI,SAACC,EAAGC,GAAJ,OACnB,wBAEIlB,UAAW,0BAA4B,EAAKL,MAAMI,WAAakB,EAAI,SAAW,IAC9EE,QAAS,kBAAM,EAAKxB,MAAMiC,eAAeX,IACzCI,KAAK,IAJT,SAKKJ,GAJIC,yB,GAtGjBW,a,uLCVhC,IAAMC,EAAQzC,IAAO0C,MAAV,KA2DIC,E,uKA9CP,IAAMC,EAA4C,IAAlCvC,KAAKC,MAAMuC,YAAYC,OACvCvC,QAAQC,IAAIoC,GACZ,IAAMG,EAAO1C,KAAKC,MAAMuC,YACxBtC,QAAQC,IAAIuC,GACZ,IAAMC,EAAU,CAAC,OAAQ,OAAQ,QAAS,YAAa,SAGvD,OAEI,qBAAKrC,UAAU,iBAAf,SACKiC,EACG,mDAGA,eAACH,EAAD,CAAOQ,YAAa,EAAGC,YAAa,EAAGvC,UAAU,8DAAjD,UAEI,gCACI,oBAAIA,UAAU,aAAawC,cAAY,UAAvC,SACKH,EAAQrB,KAAI,SAACyB,EAAShB,GAAV,OAAgB,6BAAagB,GAAJhB,UAG9C,gCACKW,EAAKpB,KAAI,SAAC0B,GAAD,OACN,oBAEIvB,QAAS,SAAAwB,GAAK,OAAIC,OAAOC,SAASxB,KAAOqB,EAAKI,SAFlD,SAKKT,EAAQrB,KAAI,SAAC+B,EAAQtB,GAAT,OACT,6BACKiB,EAAKK,EAAOC,gBADRvB,OALRiB,EAAKvC,kB,GA5BjB0B,a,0WCT7B,IAAMoB,EAAM5D,IAAO6D,IAAV,KAUHC,EAAK9D,IAAO+D,GAAV,KAQaC,E,uKAKb,IAHM,IAAD,OAECC,EAAc,GACX7B,EAAI,EAAGA,GAAK8B,KAAKC,KAAM9D,KAAKC,MAAM8D,WAAa/D,KAAKC,MAAM+D,cAAgBjC,IAC/E6B,EAAYK,KAAKlC,GAIrB,OAEI,cAACwB,EAAD,UAEI,cAACE,EAAD,CAAInD,UAAU,aAAd,SACKsD,EAAYtC,KAAI,SAAC4C,EAAQnC,GAAT,OACb,oBAEIzB,UAAW,cAAgB,EAAKL,MAAMkE,cAAgBD,EAAS,SAAW,IAF9E,SAII,wBACI3D,MAAO,CAACC,gBAAgB,UAAWoB,MAAO,SAC1CH,QAAS,kBAAM,EAAKxB,MAAMmE,eAAeF,IACzC5D,UAAU,YAHd,SAKK4D,KARAnC,c,GAjBOI,aCiMzBkC,G,8DA5Mb,WAAYpE,GAAQ,IAAD,8BACjB,cAAMA,IAEDqE,MAAQ,CACXC,MAAO,GACPlD,OAAQ,GACRQ,OAAQ,GACRI,OAAO,GACPuC,UAAU,EACVC,QAAS,OACTC,SAAU,MACV3E,QAAS,MACTK,QAAS,MACTuE,UAAW,GACXR,YAAa,EACbH,aAAc,IAGhB,EAAKtC,cAAgB,EAAKA,cAAckD,KAAnB,gBACrB,EAAK5C,cAAgB,EAAKA,cAAc4C,KAAnB,gBACrB,EAAK9D,kBAAoB,EAAKA,kBAAkB8D,KAAvB,gBACzB,EAAK1C,eAAiB,EAAKF,cAAc4C,KAAnB,gBACtB,EAAKR,eAAiB,EAAKA,eAAeQ,KAApB,gBAtBL,E,2DAyBJT,GACbnE,KAAK6E,SAAS,CACZV,YAAaA,M,oCAIHpE,GACZC,KAAK6E,SAAS,CACZ9E,QAASA,EACToE,YAAa,M,oCAIH/D,GACZJ,KAAK6E,SAAS,CACZzE,QAASA,EACT+D,YAAa,M,qCAIF9D,GACbL,KAAK6E,SAAS,CACZxE,SAAUA,EACV8D,YAAa,M,wCAGCW,EAAO7D,GACP,KAAZA,GACFjB,KAAK6E,SAAS,CACZF,UAAWG,EACXX,YAAa,M,0CAKE,IAAD,OAClBY,MAAM,6DAA8D,CAClEC,QAAS,CACPC,cAAe,0BAGhBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAM7C,EAAc6C,EAAO/D,KAAI,SAAA0B,GAC7B,OAAOA,KAGH3B,EAASgE,EAAO/D,KAAI,SAAA0B,GAAI,OAAIA,EAAKsB,SACnCgB,EAAwB,YAAI,IAAIC,IAAIlE,IAASmE,OACjDF,EAAsBG,QAAQ,OAE9B,IAAM5D,EAASwD,EAAO/D,KAAI,SAAA0B,GAAI,OAAIA,EAAK0C,MAAMC,MAAM,QAAMC,OACrDC,EAAwB,YAAI,IAAIN,IAAI1D,IAAS2D,OACjDK,EAAsBJ,QAAQ,OAE9B,IAAMxD,EAASoD,EAAO/D,KAAI,SAAA0B,GAAI,OAAIA,EAAKf,OAAO0D,MAAM,QAAMC,OACtDE,EAAwB,YAAI,IAAIP,IAAItD,IAASuD,OACjDM,EAAsBL,QAAQ,OAE9B,EAAKZ,SAAS,CACZN,MAAO/B,EACPnB,OAAQiE,EACRzD,OAAQgE,EACR5D,OAAQ6D,EACRtB,UAAU,OAEXuB,OAAM,SAACC,GACR9F,QAAQC,IAAI6F,Q,+BAKR,IAGJC,EAHG,SAEoDjG,KAAKsE,MAAxDE,EAFD,EAECA,SAAUnD,EAFX,EAEWA,OAAQQ,EAFnB,EAEmBA,OAAQI,EAF3B,EAE2BA,OAAQ+B,EAFnC,EAEmCA,aAEtCkC,EAAclG,KAAKsE,MAAMC,MAG3B0B,EAD0B,QAAxBjG,KAAKsE,MAAMI,SACL,GAEC,EAGXwB,EAAcA,EAAYV,MAAK,SAACW,EAAGC,GACjC,OAAID,EAAE,EAAK7B,MAAMG,SAASnB,cACxB8C,EAAE,EAAK9B,MAAMG,SAASnB,eAEd,EAAI2C,EAEL,EAAIA,KAEZI,QAAO,SAAAC,GACR,OAEEA,EAAQ,KACLhD,cACAiD,SAAS,EAAKjC,MAAMK,UAAUrB,gBACjCgD,EAAQ,KACLhD,cACAiD,SAAS,EAAKjC,MAAMK,UAAUrB,gBACjCgD,EAAQ,MACLhD,cACAiD,SAAS,EAAKjC,MAAMK,UAAUrB,gBACjCgD,EAAQ,OACLhD,cACAiD,SAAS,EAAKtE,OAAO0C,UAAUrB,kBAItC,IAAIkD,EAAsB,GAc1B,GAZEA,EADyB,QAAvBxG,KAAKsE,MAAMvE,QACSmG,EAEAA,EAAYG,QAAO,SAAArD,GAAI,OAAIA,EAAKsB,QAAU,EAAKA,MAAMvE,WAI3EyG,EAFyB,QAAvBxG,KAAKsE,MAAMlE,QAESoG,EAEAA,EAAoBH,QAAO,SAAArD,GAAI,OAAIA,EAAK0C,MAAMpC,cACjEiD,SAAS,EAAKjC,MAAMlE,QAAQkD,mBAG5BkB,EACH,OAAO,6CAET,IAAIiC,EAAkBzG,KAAKsE,MAAMH,YAAcH,EAC3C0C,EAAmBD,EAAkBzC,EACrC2C,EAAeH,EAAoBI,MAAMF,EAAkBD,GAE/D,OAEE,sBAAMnG,UAAU,kBAAkBG,GAAG,UAArC,SAEE,qBAAKH,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,YAAf,UAEE,cAAC,EAAD,CAEEe,OAAQA,EACRQ,OAAQA,EACRI,OAAQA,EAERlC,QAASC,KAAKsE,MAAMvE,QACpBK,QAASJ,KAAKsE,MAAMlE,QACpBC,SAAUL,KAAKsE,MAAMjE,SAErBqB,cAAe1B,KAAK0B,cACpBM,cAAehC,KAAKgC,cACpBE,eAAgBlC,KAAKkC,eACrBpB,kBAAmBd,KAAKc,oBAG1B,cAAC,EAAD,CAEE0B,YAAamE,IAGf,cAAC,EAAD,CACExC,YAAanE,KAAKsE,MAAMH,YACxBH,aAAcA,EACdD,WAAYyC,EAAoB/D,OAChC2B,eAAgBpE,KAAKoE,gC,GAhMrByC,IAAM1E,YCGT2E,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCDdO,EAAQ,IAAUC,SAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bd,M","file":"static/js/main.53f77922.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\n\nconst Search = styled.div`\nwidth: 100%;\nmargin: 0 auto;\n`\n\nconst Filter = styled.div`\nwidth: 100%;\nmargin: 0 1%;\n`\n\nclass SearchRestaurants extends Component {\n\n    render() {\n        let byState = this.props.byState;\n        console.log(byState)\n        let byGenre = this.props.byGenre;\n        console.log(byGenre)\n        let byAttire = this.props.byAttire;\n        console.log(byAttire)\n\n\n        return (\n\n            <Search className=\"search-restaurants row justify-content-center bg-light\" style={{backgroundColor: \"Success\"}}>\n\n                <div className=\"col-md-10\">\n\n                    <div className=\"input-group\">\n                        <input \n                            id=\"SearchRestaurants\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            aria-label=\"Search Restaurants\"\n                            onKeyDown={e => this.props.searchRestaurants(e.target.value, e.keyCode)}\n                        />\n\n                        <div className=\"input-group-append\" >\n\n                            <Filter className=\"filter-by-state\">\n\n                                <button\n                                    className=\"btn dropdown-toggle\"\n                                    type=\"button\"\n                                    data-toggle=\"dropdown\"\n                                    aria-haspopup=\"true\"\n                                    aria-expanded=\"false\"\n                                >\n                                    Filter By TEST State:  {byState} <span className=\"caret\" /> \n\n                                </button>\n\n                                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\n\n                                    {this.props.states.map((s, index) => (\n                                        <button\n                                            key={index}\n                                            className={'sort-by dropdown-item ' + (this.props.byState === s ? 'active' : '')}\n                                            onClick={() => this.props.filterByState(s)}\n                                            href=\"#\" >\n                                            {s}\n                                        </button>\n                                    ))}\n\n                                </div>\n\n                            </Filter>\n\n                            <Filter className='filter-by-genre'>\n\n                                <button\n                                    style={{backgroundColor:'success', color: \"black\"}}\n                                    type=\"button\"\n                                    className=\"btn dropdown-toggle\"\n                                    data-toggle=\"dropdown\"\n                                    aria-haspopup=\"true\"\n                                    aria-expanded=\"false\"\n                                >\n                                    Filter By Genre: {this.props.byGenre} <span className=\"caret\" />\n                                </button>\n\n                                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\n                                    {this.props.genres.map((g, i) => (\n                                        <button\n                                            key={i}\n                                            className={'sort-by dropdown-item ' + (this.props.byGenre === g ? 'active' : '')}\n                                            onClick={() => this.props.filterByGenre(g)}\n                                            href=\"#\" >\n                                            {g}\n                                        </button>\n                                    ))}\n                                </div>\n\n                            </Filter>\n\n                            <Filter className=\"filter-by-attire\">\n\n                                <button\n                                    style={{backgroundColor:'success', color: \"black\"}}\n                                    className=\"btn  dropdown-toggle\"\n                                    type=\"button\"\n                                    data-toggle=\"dropdown\"\n                                    aria-haspopup=\"true\"\n                                    aria-expanded=\"false\"\n                                >\n                                    Filter By Attire:  {byAttire} <span className=\"caret\" />\n\n                                </button>\n\n                                <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\n\n                                    {this.props.attire.map((s, index) => (\n                                        <button\n                                            key={index}\n                                            className={'sort-by dropdown-item ' + (this.props.byAttire === s ? 'active' : '')}\n                                            onClick={() => this.props.filterByAttire(s)}\n                                            href=\"#\" >\n                                            {s}\n                                        </button>\n                                    ))}\n\n                                </div>\n\n                            </Filter>\n                        </div>\n                    </div>\n                </div>\n\n            </Search >\n        );\n    }\n}\n\nexport default SearchRestaurants;","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\n\nconst Table = styled.table`\nwidth: 100%;\nmargin: 0 1%;\njustify-content: center;\ndisplay: block;\nalign-items: center;\nfont-size: 1rem;\n`\n\nclass AllRestaurants extends Component {\n\n    render() {\n\n        const isEmpty = this.props.restaurants.length === 0;\n        console.log(isEmpty)\n        const data = this.props.restaurants;\n        console.log(data)\n        const columns = ['Name', 'City', 'State', 'Telephone', 'Genre']\n\n\n        return (\n\n            <div className=\"mb-3 item-list\" >\n                {isEmpty ? (\n                    <div>NO RESULTS FOUND</div>\n                ) :\n\n                    <Table cellPadding={5} cellSpacing={5} className=\"table table-striped  table-responsive table-hover table-fit\">\n\n                        <thead >\n                            <tr className=\"bg-success\" font-family='cursive'>\n                                {columns.map((heading, i) => <th key={i}>{heading}</th>)}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {data.map((item) => (\n                                <tr\n                                    key={item.id}\n                                    onClick={event => window.location.href = item.website}\n                                >\n\n                                    {columns.map((column, i) => (\n                                        <td key={i}>\n                                            {item[column.toLowerCase()]}\n                                        </td>\n                                    ))}\n\n                                </tr>\n                            ))}\n\n                        </tbody>\n\n                    </Table>\n                }\n            </div>\n        )\n    }\n}\n\nexport default AllRestaurants;","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\n\nconst Nav = styled.nav`\njustify-content: center;\ndisplay: block;\nmargin: 0 auto;\nalign-items: center;\nfont-size: 1;\n&:hover{\n    background-color: light grey;\n}\n`\nconst Ul = styled.ul`\ndisplay: flex;\njustify-content: center;\n& li{\n    margin: 0 0.3rem;\n}\n`\n\nexport default class Pagination extends Component {\n\n    render() {\n\n        const pageNumbers = [];\n        for (let i = 1; i <= Math.ceil((this.props.totalItems / this.props.itemsPerPage)); i++) {\n            pageNumbers.push(i)\n        }\n\n        \n        return (\n\n            <Nav>\n\n                <Ul className=\"pagination\">\n                    {pageNumbers.map((number, i) => (\n                        <li\n                            key={i}\n                            className={'page-item ' + (this.props.currentPage === number ? 'active' : '')}>\n                                \n                            <button\n                                style={{backgroundColor:'#28A744', color: \"black\"}}\n                                onClick={() => this.props.setCurrentPage(number)}\n                                className='page-link'\n                            >\n                                {number}\n                            </button>\n                        </li>\n                    ))}\n                </Ul>\n\n            </Nav>\n\n        );\n    }\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SearchRestaurants from './SearchRestaurants';\nimport AllRestaurants from './AllRestaurants';\nimport Pagination from './Pagination';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport \"../css/App.css\";\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [],\n      states: [],\n      genres: [],\n      attire:[],\n      isLoaded: false,\n      orderBy: 'name',\n      orderDir: 'asc',\n      byState: 'All',\n      byGenre: 'All',\n      queryText: '',\n      currentPage: 1,\n      itemsPerPage: 10\n    };\n\n    this.filterByState = this.filterByState.bind(this);\n    this.filterByGenre = this.filterByGenre.bind(this);\n    this.searchRestaurants = this.searchRestaurants.bind(this);\n    this.filterByAttire = this.filterByGenre.bind(this);\n    this.setCurrentPage = this.setCurrentPage.bind(this);\n  }\n\n  setCurrentPage(currentPage) {\n    this.setState({\n      currentPage: currentPage\n    });\n  }\n\n  filterByState(byState) {\n    this.setState({\n      byState: byState,\n      currentPage: 1\n    });\n  }\n\n  filterByGenre(byGenre) {\n    this.setState({\n      byGenre: byGenre,\n      currentPage: 1\n    });\n  }\n\n  filterByAttire(byAttire) {\n    this.setState({\n      byAttire: byAttire,\n      currentPage: 1\n    });\n  }\n  searchRestaurants(guery, keyCode) {\n    if (keyCode === 13) {\n      this.setState({\n        queryText: guery,\n        currentPage: 1\n      });\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://code-challenge.spectrumtoolbox.com/api/restaurants\", {\n      headers: {\n        Authorization: \"Api-Key q3MNxtfep8Gt\",\n      },\n    })\n      .then(res => res.json())\n      .then(result => {\n        const restaurants = result.map(item => {\n          return item;\n        });\n\n        const states = result.map(item => item.state)\n        let uniqueAndSortedStates = [...new Set(states)].sort()\n        uniqueAndSortedStates.unshift(\"All\");\n\n        const genres = result.map(item => item.genre.split(\",\")).flat()\n        let uniqueAndSortedGenres = [...new Set(genres)].sort()\n        uniqueAndSortedGenres.unshift(\"All\")\n\n        const attire = result.map(item => item.attire.split(\",\")).flat()\n        let uniqueAndSortedAttire = [...new Set(attire)].sort()\n        uniqueAndSortedAttire.unshift(\"All\")\n\n        this.setState({\n          items: restaurants,\n          states: uniqueAndSortedStates,\n          genres: uniqueAndSortedGenres,\n          attire: uniqueAndSortedAttire,\n          isLoaded: true,\n        });\n      }).catch((err) => {\n        console.log(err);\n      });\n  }\n\n\n  render() {\n\n    const { isLoaded, states, genres, attire, itemsPerPage } = this.state;\n    let order;\n    let sortedItems = this.state.items;\n\n    if (this.state.orderDir === 'asc') {\n      order = 1;\n    } else {\n      order = -1;\n    }\n\n    sortedItems = sortedItems.sort((a, b) => {\n      if (a[this.state.orderBy].toLowerCase() <\n        b[this.state.orderBy].toLowerCase()\n      ) {\n        return -1 * order;\n      } else {\n        return 1 * order;\n      }\n    }).filter(eachItem => {\n      return (\n\n        eachItem['name']\n          .toLowerCase()\n          .includes(this.state.queryText.toLowerCase()) ||\n        eachItem['city']\n          .toLowerCase()\n          .includes(this.state.queryText.toLowerCase()) ||\n        eachItem['genre']\n          .toLowerCase()\n          .includes(this.state.queryText.toLowerCase()) ||\n        eachItem['attire']\n          .toLowerCase()\n          .includes(this.attire.queryText.toLowerCase())\n      );\n    });\n\n    let sortedFilteredItems = ''\n    if (this.state.byState === 'All') {\n      sortedFilteredItems = sortedItems;\n    } else {\n      sortedFilteredItems = sortedItems.filter(item => item.state === this.state.byState);\n    }\n    if (this.state.byGenre === 'All') {\n      // eslint-disable-next-line\n      sortedFilteredItems = sortedFilteredItems;\n    } else {\n      sortedFilteredItems = sortedFilteredItems.filter(item => item.genre.toLowerCase()\n        .includes(this.state.byGenre.toLowerCase()));\n    }\n\n    if (!isLoaded)\n      return <div>Loading...</div>;\n\n    let indexOfLastItem = this.state.currentPage * itemsPerPage;\n    let indexOfFirstItem = indexOfLastItem - itemsPerPage;\n    let currentItems = sortedFilteredItems.slice(indexOfFirstItem, indexOfLastItem)\n\n    return (\n\n      <main className='page bg-success' id='ratings' >\n        \n        <div className='container'>\n          <div className='row'>\n            <div className='col-mid-12 bg-white' >\n              <div className='container'>\n\n                <SearchRestaurants\n                \n                  states={states}\n                  genres={genres}\n                  attire={attire}\n\n                  byState={this.state.byState}\n                  byGenre={this.state.byGenre}\n                  byAttire={this.state.byAttire}\n\n                  filterByState={this.filterByState}\n                  filterByGenre={this.filterByGenre}\n                  filterByAttire={this.filterByAttire}\n                  searchRestaurants={this.searchRestaurants}\n                />\n\n                <AllRestaurants\n                \n                  restaurants={currentItems}\n                />\n\n                <Pagination\n                  currentPage={this.state.currentPage}\n                  itemsPerPage={itemsPerPage}\n                  totalItems={sortedFilteredItems.length}\n                  setCurrentPage={this.setCurrentPage}\n                />\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </main>\n    );\n  }\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport reportWebVitals from './reportWebVitals';\n\nrequire('dotenv').config();\n\nReactDOM.render(\n  <React.StrictMode >\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}